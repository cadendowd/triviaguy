[{"/Users/caden/Desktop/triviaguy/src/index.js":"1","/Users/caden/Desktop/triviaguy/src/reportWebVitals.js":"2","/Users/caden/Desktop/triviaguy/src/App.js":"3","/Users/caden/Desktop/triviaguy/src/Card.js":"4"},{"size":535,"mtime":1702368105636,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1702368105636,"results":"7","hashOfConfig":"6"},{"size":3597,"mtime":1703565230436,"results":"8","hashOfConfig":"6"},{"size":2077,"mtime":1703565262354,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"a1k1cs",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/caden/Desktop/triviaguy/src/index.js",[],["21","22"],"/Users/caden/Desktop/triviaguy/src/reportWebVitals.js",[],"/Users/caden/Desktop/triviaguy/src/App.js",["23"],"import { useState } from 'react';\nimport './App.css';\nimport Card from './Card';\n\nconst categories = [\n  {\n    category: \"General\",\n    color: \"lightgreen\",\n  },\n  {\n    category: \"Entertainment\",\n    color: \"lightpink\",\n  },\n  {\n    category: \"Sports\",\n    color: \"lightblue\",\n  },\n  {\n    category: \"Business\",\n    color: \"lavendar\",\n  },\n  {\n    category: \"Technology\",\n    color: \"lightgray\",\n  },\n];\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleCall =  async () => {\n    const fetchArticles = async () => {\n      try {\n        setLoading(true);\n        // abc news\n        // const response = await fetch('https://newsapi.org/v2/top-headlines?pageSize=21&sources=abc-news&language=en&apiKey=ff6c70e621e54ff19b943a356a78973d');\n        // all business sources \n        // const response = await fetch('https://newsapi.org/v2/top-headlines/sources?category=business&apiKey=ff6c70e621e54ff19b943a356a78973d');\n\n        const apiKey = process.env.REACT_APP_NEWS_API_KEY;\n        const responses = await Promise.all([\n          fetch(`https://newsapi.org/v2/top-headlines?category=general&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=entertainment&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=sports&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=business&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=technology&language=en&apiKey=${apiKey}`),\n\n          // fetch('https://newsapi.org/v2/top-headlines/sources?country=us&language=en&apiKey=ff6c70e621e54ff19b943a356a78973d'),\n        ]);\n\n        const data = await Promise.all(responses.map(response => response.json()));\n        console.log(data);\n        const zipped = data.map((article, i) => {\n          return {\n            \"articles\": article.articles,\n            \"category\": categories[i].category,\n            \"color\": categories[i].color,\n          }\n        })\n        console.log(zipped);\n        setData(zipped);\n        // sf headlines === try nbc northern california? \n        // const resp = await fetch('https://newsapi.org/v2/top-headlines?q=san%20francisco&q=bay%20area&pageSize=30&language=en&apiKey=ff6c70e621e54ff19b943a356a78973d');\n        // const sf = await resp.json();\n        // console.log(sf)\n        // setSf(sf.articles\n\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    await fetchArticles();\n  };\n\n\n  return (\n    <div className=\"App\">\n      {/* TODO nav bar with our info */}\n      <h2>Caden's trivia helper v1</h2>\n      <p>click below for recent headlines</p>\n      <button\n        style={{marginTop: '10px'}}\n        onClick={() => {handleCall()}}\n      >\n        click me\n      </button>\n      {\n        error &&\n        <div>there was an error. try again tomorrow.</div>\n      }\n      {\n        data?.status === 'error' ? \n          <div>error please try again tomorrow.</div>\n         : data ?\n          data.map((item, i) => {\n            return (<Card\n              key={i}\n              articles={item.articles}\n              category={item.category}\n              color={item.color}\n            />)\n          }) :\n        <></>\n      } \n    </div>\n  );\n}\n\nexport default App;\n\n\n// \"message\": \"Your API key is invalid or incorrect. Check your key, or go to https://newsapi.org to create a free API key.\"\n","/Users/caden/Desktop/triviaguy/src/Card.js",["24","25"],"import React, {useState, useMemo} from \"react\";\n\nfunction shuffleArray(originalArray) {\n    // Creating a copy of the original array\n    const array = [...originalArray];\n    \n    // Fisher-Yates Shuffle Algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n        // Generate a random index\n        const j = Math.floor(Math.random() * (i + 1));\n\n        // Swap elements at indices i and j\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n\nconst Card = (props) => {\n    const {\n        articles,\n        category,\n        color,\n    } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [shuffledArticles, setShuffledArticles] = useState(shuffleArray(articles));\n\n    const handleShufle = () => {\n        setLoading(true);\n        const shuffleAgain = shuffleArray(shuffledArticles);\n        setShuffledArticles(shuffleAgain);\n        setLoading(false);\n    }\n    \n    return (\n        <div \n          style={{\n            backgroundColor: color,\n            padding: '2rem',\n            margin: '1rem 2rem',\n            borderRadius: '10px'\n          }}\n        >\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <h3>{category}</h3>\n                <button onClick={() => {handleShufle()}}>refresh</button>\n            </div>\n            <ol>\n            {\n                shuffledArticles.slice(0, 5).map((article, i) => {\n                    const title = article.title;\n                    const short = title.substring(0, title.lastIndexOf('-'));\n                    return (\n                        <li key={`${category}-i`}>\n                            <div style={{marginTop: i !== 0 ? '30px': '0px'}}>\n                                <h3>{short}</h3>\n                                <p>{article.description} - {article.source.name}</p>\n                                {/* <p>{article.content}</p> */}\n                            </div>\n                        </li>\n                    )})\n            }\n            </ol>\n        </div>\n    )\n}\n\nexport default Card;",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":30,"column":10,"nodeType":"32","messageId":"33","endLine":30,"endColumn":17},{"ruleId":"30","severity":1,"message":"34","line":1,"column":26,"nodeType":"32","messageId":"33","endLine":1,"endColumn":33},{"ruleId":"30","severity":1,"message":"31","line":26,"column":12,"nodeType":"32","messageId":"33","endLine":26,"endColumn":19},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation"]