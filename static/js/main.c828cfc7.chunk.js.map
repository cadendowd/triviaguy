{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["shuffleArray","originalArray","array","i","length","j","Math","floor","random","Card","props","articles","category","color","loading","setLoading","useState","shuffledArticles","setShuffledArticles","_jsxs","style","backgroundColor","padding","margin","borderRadius","children","display","justifyContent","_jsx","onClick","handleShufle","shuffleAgain","slice","map","article","title","short","substring","lastIndexOf","marginTop","description","source","name","concat","categories","App","data","setData","error","setError","className","async","apiKey","process","responses","Promise","all","fetch","response","json","console","log","zipped","fetchArticles","handleCall","status","item","_Fragment","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.c828cfc7.chunk.js","sourcesContent":["import React, {useState, useMemo} from \"react\";\n\nfunction shuffleArray(originalArray) {\n    // Creating a copy of the original array\n    const array = [...originalArray];\n    \n    // Fisher-Yates Shuffle Algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n        // Generate a random index\n        const j = Math.floor(Math.random() * (i + 1));\n\n        // Swap elements at indices i and j\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n\nconst Card = (props) => {\n    const {\n        articles,\n        category,\n        color,\n    } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [shuffledArticles, setShuffledArticles] = useState(shuffleArray(articles));\n\n    const handleShufle = () => {\n        setLoading(true);\n        const shuffleAgain = shuffleArray(shuffledArticles);\n        setShuffledArticles(shuffleAgain);\n        setLoading(false);\n    }\n    \n    return (\n        <div \n          style={{\n            backgroundColor: color,\n            padding: '2rem',\n            margin: '1rem 2rem',\n            borderRadius: '10px'\n          }}\n        >\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <h3>{category}</h3>\n                <button onClick={() => {handleShufle()}}>refresh</button>\n            </div>\n            <ol>\n            {\n                shuffledArticles.slice(0, 5).map((article, i) => {\n                    const title = article.title;\n                    const short = title.substring(0, title.lastIndexOf('-'));\n                    return (\n                        <li key={`${category}-i`}>\n                            <div style={{marginTop: i !== 0 ? '30px': '0px'}}>\n                                <h3>{short}</h3>\n                                <p>{article.description} - {article.source.name}</p>\n                                {/* <p>{article.content}</p> */}\n                            </div>\n                        </li>\n                    )})\n            }\n            </ol>\n        </div>\n    )\n}\n\nexport default Card;","import { useState } from 'react';\nimport './App.css';\nimport Card from './Card';\n\nconst categories = [\n  {\n    category: \"General\",\n    color: \"lightgreen\",\n  },\n  {\n    category: \"Entertainment\",\n    color: \"lightpink\",\n  },\n  {\n    category: \"Sports\",\n    color: \"lightblue\",\n  },\n  {\n    category: \"Business\",\n    color: \"lavendar\",\n  },\n  {\n    category: \"Technology\",\n    color: \"lightgray\",\n  },\n];\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleCall =  async () => {\n    const fetchArticles = async () => {\n      try {\n        setLoading(true);\n        // abc news\n        // const response = await fetch('https://newsapi.org/v2/top-headlines?pageSize=21&sources=abc-news&language=en&apiKey=ff6c70e621e54ff19b943a356a78973d');\n        // all business sources \n        // const response = await fetch('https://newsapi.org/v2/top-headlines/sources?category=business&apiKey=ff6c70e621e54ff19b943a356a78973d');\n\n        const apiKey = process.env.REACT_APP_NEWS_API_KEY;\n        const responses = await Promise.all([\n          fetch(`https://newsapi.org/v2/top-headlines?category=general&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=entertainment&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=sports&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=business&language=en&apiKey=${apiKey}`),\n          // fetch(`https://newsapi.org/v2/top-headlines?category=technology&language=en&apiKey=${apiKey}`),\n\n          // fetch('https://newsapi.org/v2/top-headlines/sources?country=us&language=en&apiKey=ff6c70e621e54ff19b943a356a78973d'),\n        ]);\n\n        const data = await Promise.all(responses.map(response => response.json()));\n        console.log(data);\n        const zipped = data.map((article, i) => {\n          return {\n            \"articles\": article.articles,\n            \"category\": categories[i].category,\n            \"color\": categories[i].color,\n          }\n        })\n        console.log(zipped);\n        setData(zipped);\n        // sf headlines === try nbc northern california? \n        // const resp = await fetch('https://newsapi.org/v2/top-headlines?q=san%20francisco&q=bay%20area&pageSize=30&language=en&apiKey=ff6c70e621e54ff19b943a356a78973d');\n        // const sf = await resp.json();\n        // console.log(sf)\n        // setSf(sf.articles\n\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    await fetchArticles();\n  };\n\n\n  return (\n    <div className=\"App\">\n      {/* TODO nav bar with our info */}\n      <h2>Caden's trivia helper v1</h2>\n      <p>click below for recent headlines</p>\n      <button\n        style={{marginTop: '10px'}}\n        onClick={() => {handleCall()}}\n      >\n        click me\n      </button>\n      {\n        error &&\n        <div>there was an error. try again tomorrow.</div>\n      }\n      {\n        data?.status === 'error' ? \n          <div>error please try again tomorrow.</div>\n         : data ?\n          data.map((item, i) => {\n            return (<Card\n              key={i}\n              articles={item.articles}\n              category={item.category}\n              color={item.color}\n            />)\n          }) :\n        <></>\n      } \n    </div>\n  );\n}\n\nexport default App;\n\n\n// \"message\": \"Your API key is invalid or incorrect. Check your key, or go to https://newsapi.org to create a free API key.\"\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}